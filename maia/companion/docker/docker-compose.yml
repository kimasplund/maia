version: '3.8'

services:
  maia-gpu:
    build:
      context: .
      dockerfile: Dockerfile
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - SUPERVISOR_TOKEN=${SUPERVISOR_TOKEN}
      - HA_URL=${HA_URL:-http://supervisor/core}
      - VALKEY_URL=${VALKEY_URL:-http://valkey:8080}
      - VALKEY_TOKEN=${VALKEY_TOKEN}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-maia}
    volumes:
      - ./models:/app/models
      - ./data:/app/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - maia-net

  valkey-replica:
    image: valkey/valkey:v8
    environment:
      - VALKEY_MODE=replica
      - VALKEY_PRIMARY_URL=${VALKEY_PRIMARY_URL}
      - VALKEY_PRIMARY_TOKEN=${VALKEY_TOKEN}
      - VALKEY_SYNC_INTERVAL=60
    volumes:
      - valkey-data:/data
    networks:
      - maia-net

  postgis-replica:
    image: postgis/postgis:17-3.5-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-maia}
      - PRIMARY_HOST=${PRIMARY_POSTGIS_HOST}
      - PRIMARY_PORT=${PRIMARY_POSTGIS_PORT:-5432}
      - REPLICA_MODE=true
    volumes:
      - postgis-data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    command: >
      postgres
      -c hot_standby=on
      -c max_standby_streaming_delay=30s
      -c wal_receiver_status_interval=10s
      -c hot_standby_feedback=on
    networks:
      - maia-net

volumes:
  valkey-data:
  postgis-data:

networks:
  maia-net:
    driver: bridge 